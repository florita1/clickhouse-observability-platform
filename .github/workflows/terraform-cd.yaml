name: Terraform CD Pipeline

on:
  push:
    branches: [main]
    paths:
      - 'terraform/**'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_clickhouse_admin_password: ${{ secrets.CLICKHOUSE_ADMIN_PASSWORD }}
  TF_VAR_clickhouse_ingestor_password: ${{ secrets.CLICKHOUSE_INGESTOR_PASSWORD }}
  KUBECONFIG: $HOME/.kube/config

jobs:
  apply-infra:
    name: Terraform Apply - Infra
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/environments/dev

    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.0

      - name: Terraform Init
        run: terraform init

      - name: Remove stale ClickHouse state (if needed)
        run: |
          terraform state rm -lock=false 'module.clickhouse.clickhousedbops_user.user[0]' || echo "User state not found"
          terraform state rm -lock=false 'module.clickhouse.clickhousedbops_role.role[0]' || echo "Role state not found"
          terraform state rm -lock=false 'module.clickhouse.clickhousedbops_grant_privilege.insert[0]' || echo "Grant Privilege state not found"
          terraform state rm -lock=false 'module.clickhouse.clickhousedbops_grant_role.user_bind[0]' || echo "Grante Role state not found"

      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          aws eks update-kubeconfig \
            --region us-east-1 \
            --name clickhouse-observability-cluster \
            --kubeconfig $HOME/.kube/config
          kubectl get nodes

      - name: Terraform Apply (enable_postdeploy=false)
        run: terraform apply -auto-approve -var="enable_postdeploy=false"

  bootstrap-prometheus:
    name: Prometheus Bootstrap
    runs-on: ubuntu-latest
    needs: apply-infra

    steps:
      - uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: '1.30.0'

      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          aws eks update-kubeconfig \
            --region us-east-1 \
            --name clickhouse-observability-cluster \
            --kubeconfig $HOME/.kube/config
          kubectl get nodes

      - name: Run Bootstrap Script
        run: |
          bash scripts/bootstrap-prometheus.sh

  bootstrap-clickhouse:
    name: ClickHouse Bootstrap
    runs-on: ubuntu-latest
    needs: apply-infra

    steps:
      - uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: '1.30.0'

      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          aws eks update-kubeconfig \
            --region us-east-1 \
            --name clickhouse-observability-cluster \
            --kubeconfig $HOME/.kube/config
          kubectl get nodes

      - name: Run Bootstrap Script
        run: |
          bash scripts/bootstrap-clickhouse.sh

  post-deploy:
    name: Terraform Apply - Post Deploy
    runs-on: ubuntu-latest
    needs: bootstrap-clickhouse
    defaults:
      run:
        working-directory: terraform/environments/dev

    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.0

      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          aws eks update-kubeconfig \
            --region us-east-1 \
            --name clickhouse-observability-cluster \
            --kubeconfig $HOME/.kube/config
          kubectl get nodes

      - name: Port-forward ClickHouse (via script)
        run: |
          chmod +x scripts/portforward-clickhouse.sh
          ./scripts/portforward-clickhouse.sh

      - name: Terraform Apply (enable_postdeploy = true)
        run: terraform apply -auto-approve -var="enable_postdeploy=true"

      - name: Restart ingestion-service
        run: |
          kubectl rollout restart deployment ingestion-service -n ingestion
